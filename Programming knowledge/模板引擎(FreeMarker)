1.FreeMarker是什么？
  FreeMarker是一个用Java语言编写的模板引擎。
  目前企业中:主要用Freemarker做静态页面或是页面展示,所以ftl文件其实也可以作为静态页面。
  它基于模板来生成文本输出。
  Freemarker与web容器无关，即在web运行时，它并不知道servlet或者HTTP，它不仅可以用作表现层的实现技术，
  而且还可以用于生成XML，JSP或Java等。目前在企业中，主要用freemarker做静态页面或是页面展示。
  Freemarker模板的文件后缀名：--------------------------> .ftl
  

2.FreeMaker的作用：---------------------------------->页面静态化
	a）JavaEEWeb 开发存在的问题：动态网页技术创建的网页相率低，需要把这些动态网页转换成静态网页，节省程序运行时间
	b）是不是把一个系统中所有的网页都进行静态化？   什么样的页面需要静态化？
		[1]不是，因为当一个页面静态化之后，所有的写操作都会造成巨大的资源调动，造成更多资源的浪费，
			所以我们只将一些修改几率不大或不会修改的页面静态化。
		[2]例：电子图书、商品详情信息....
	c）CMS系统（Content Manager System）  就是把动态网页静态化
  
	d）页面静态化原理：JavaObject------>FreeMaker Template--------->HTML
  
  
 3.freemarker的使用方法:
　第一步：将freemarker的jar包添加进项目中。如果你建立的是maven项目，那么在pom.xml中直接引入依赖，maven会自动给下载这个jar包。
　第二步：freemarker的运行并不依赖web容器，可以在java工程中运行。这样我们就可以创建一个测试方法进行测试
　第三步：创建一个configuration对象。
　第四步：告诉config对象模板文件存放的路径。
　第五步：设置config的默认字符集。一般是utf-8。
　第六步：从config对象中获得模板对象，需要制定一个模板文件的名字。
　第七步：创建模板需要的数据集，可以试一个map对象，也可以试一个pojo。把模板需要的数据放入数据集。
　第八步：创建一个Writer对象，指定生成文件保存的路径及文件名。
　第九步：调用模板对象的process方法生成静态文字。需要两个参数数据集合writer对象。
　第十步：关闭write对象。
 
4.FreeMarker模板文件主要有4个部分组成
  1.文本，直接输出的部分
  2.注释，即 <#–…–> 格式不会输出
  3.插值（Interpolation）：即${..}或者#{..}格式的部分,将使用数据模型中的部分替代输出
  4.FTL指令：FreeMarker指令，和HTML标记类似，名字前加#予以区分，不会输出
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  (freemaker)
   参考博客地址：https://blog.csdn.net/yongqi_wang/article/details/80724599
   		https://blog.csdn.net/DevilDark/article/details/70147469
                          
   
 
  
  

            
